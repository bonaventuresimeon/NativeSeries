---
# Source: nativeseries/templates/network-policy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nativeseries-network-policy
  namespace: nativeseries
  labels:
    helm.sh/chart: nativeseries-0.1.0
    app.kubernetes.io/name: nativeseries
    app.kubernetes.io/instance: nativeseries
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: nativeseries
      app.kubernetes.io/instance: nativeseries
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: nativeseries
    ports:
    - protocol: TCP
      port: 5432
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
---
# Source: nativeseries/templates/pod-disruption-budget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nativeseries-pdb
  namespace: nativeseries
  labels:
    helm.sh/chart: nativeseries-0.1.0
    app.kubernetes.io/name: nativeseries
    app.kubernetes.io/instance: nativeseries
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nativeseries
      app.kubernetes.io/instance: nativeseries
---
# Source: nativeseries/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nativeseries
  labels:
    helm.sh/chart: nativeseries-0.1.0
    app.kubernetes.io/name: nativeseries
    app.kubernetes.io/instance: nativeseries
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  app_name: NativeSeries API
  log_level: INFO
---
# Source: nativeseries/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nativeseries
  labels:
    helm.sh/chart: nativeseries-0.1.0
    app.kubernetes.io/name: nativeseries
    app.kubernetes.io/instance: nativeseries
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8000
      nodePort: 30011
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nativeseries
    app.kubernetes.io/instance: nativeseries
---
# Source: nativeseries/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nativeseries
  labels:
    helm.sh/chart: nativeseries-0.1.0
    app.kubernetes.io/name: nativeseries
    app.kubernetes.io/instance: nativeseries
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: nativeseries
      app.kubernetes.io/instance: nativeseries
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nativeseries
        app.kubernetes.io/instance: nativeseries
      annotations:
        checksum/config: 8a821c171daf78cd67a5021bc28929fbece00af7e9293ca2fb72a00a4a662cb6
    spec:
      securityContext:
        fsGroup: 2000
      containers:
        - name: nativeseries
          image: "ghcr.io/bonaventuresimeon/nativeseries:latest"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: APP_NAME
              valueFrom:
                configMapKeyRef:
                  name: nativeseries
                  key: app_name
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: nativeseries
                  key: log_level
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-run
              mountPath: /var/run
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-run
          emptyDir: {}
---
# Source: nativeseries/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nativeseries
  labels:
    helm.sh/chart: nativeseries-0.1.0
    app.kubernetes.io/name: nativeseries
    app.kubernetes.io/instance: nativeseries
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
    - host: "nativeseries.local"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nativeseries
                port:
                  number: 80
