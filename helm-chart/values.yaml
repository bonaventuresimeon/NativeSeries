# Default values for my-app
# This is a YAML-formatted file.

# Application configuration
app:
  name: student-tracker
  image:
    repository: student-tracker
    tag: latest
    pullPolicy: IfNotPresent
  replicas: 2
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  ports:
    - name: http
      containerPort: 8000
      protocol: TCP
  env:
    - name: DATABASE_URL
      value: "postgresql://postgres:$(POSTGRES_PASSWORD)@postgresql:5432/myapp"
    - name: REDIS_URL
      value: "redis://redis:6379/0"
    - name: ENVIRONMENT
      value: "production"
  envFrom:
    - secretRef:
        name: app-secrets

# Service configuration
service:
  type: NodePort
  port: 80
  targetPort: 8000
  nodePort: 8011

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: 18.206.89.183
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: student-tracker-tls
      hosts:
        - 18.206.89.183

# Horizontal Pod Autoscaler
hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "your-secure-password"
    database: myapp
  primary:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: "your-redis-password"
  master:
    persistence:
      enabled: true
      size: 2Gi
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

# Monitoring configuration
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /metrics

# Security configuration
security:
  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
        - ALL

# ArgoCD application configuration
argocd:
  enabled: true
  namespace: argocd
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true