---
# Source: student-tracker/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: student-tracker
  labels:
    helm.sh/chart: student-tracker-0.1.0
    app.kubernetes.io/name: student-tracker
    app.kubernetes.io/instance: student-tracker
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: student-tracker
      app.kubernetes.io/instance: student-tracker
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - port: 8000
          protocol: TCP
    # Allow health checks from kubelet
    - ports:
        - protocol: TCP
          port: 8000
      from: []
  egress:
    # Allow DNS resolution
    - ports:
        - protocol: UDP
          port: 53
      to:
        - namespaceSelector: {}
    # Allow HTTPS for external API calls
    - ports:
        - protocol: TCP
          port: 443
      to:
        - namespaceSelector: {}
    # Allow HTTP for external API calls (if needed)
    - ports:
        - protocol: TCP
          port: 80
      to:
        - namespaceSelector: {}
---
# Source: student-tracker/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: student-tracker-config
  labels:
    helm.sh/chart: student-tracker-0.1.0
    app.kubernetes.io/name: student-tracker
    app.kubernetes.io/instance: student-tracker
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  app.conf: |
    [app]
    name = student-tracker
    environment = production
    
    [database]
    type = in-memory
    
    [logging]
    level = INFO
    format = json
---
# Source: student-tracker/templates/argocd-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argocd-server-external
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 30080
      protocol: TCP
    - name: https
      port: 443
      targetPort: 8080
      nodePort: 30443
      protocol: TCP
  selector:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
---
# Source: student-tracker/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: student-tracker
  labels:
    helm.sh/chart: student-tracker-0.1.0
    app.kubernetes.io/name: student-tracker
    app.kubernetes.io/instance: student-tracker
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 30011
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: student-tracker
    app.kubernetes.io/instance: student-tracker
---
# Source: student-tracker/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: student-tracker
  labels:
    helm.sh/chart: student-tracker-0.1.0
    app.kubernetes.io/name: student-tracker
    app.kubernetes.io/instance: student-tracker
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: student-tracker
      app.kubernetes.io/instance: student-tracker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: student-tracker
        app.kubernetes.io/instance: student-tracker
      annotations:
        checksum/config: 7856d8efac2c907e7325ae6cb107bb1cb01fc9a7ebd3cd2c160ed050c555442b
    spec:
      securityContext:
        capabilities:
          drop:
          - ALL
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: student-tracker
          image: "ghcr.io/bonaventuresimeon/NativeSeries/student-tracker:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: MONGO_URI
              value: "mongodb://localhost:27017"
            - name: DATABASE_NAME
              value: "student_project_tracker"
            - name: COLLECTION_NAME
              value: "students"
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: student-tracker-config
---
# Source: student-tracker/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: student-tracker
  labels:
    helm.sh/chart: student-tracker-0.1.0
    app.kubernetes.io/name: student-tracker
    app.kubernetes.io/instance: student-tracker
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: student-tracker
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: student-tracker/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: student-tracker
  labels:
    helm.sh/chart: student-tracker-0.1.0
    app.kubernetes.io/name: student-tracker
    app.kubernetes.io/instance: student-tracker
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "student-tracker.yourdomain.com"
      secretName: student-tracker-tls
  rules:
    - host: "student-tracker.yourdomain.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: student-tracker
                port:
                  number: 8000
---
# Source: student-tracker/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: student-tracker
  labels:
    helm.sh/chart: student-tracker-0.1.0
    app.kubernetes.io/name: student-tracker
    app.kubernetes.io/instance: student-tracker
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: student-tracker
      app.kubernetes.io/instance: student-tracker
  endpoints:
    - port: http
      path: /metrics
      interval: 30s
